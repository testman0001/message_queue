## unique identifier (int) for this worker (will default to a hash of hostname)
# id = 5150
#
## cluster id to separate different cluster
cluster_id = "test-jepsen-dev-1"
## the etcd cluster ip list
cluster_leadership_addresses = "http://etcd0.example.com:2379,http://etcd1.example.com:2379"
# cluster_leadership_username = "username"
# cluster_leadership_password = "password"
## default value is "NSQMetaData"
# cluster_leadership_root_dir = "etcd_root_dir"

## rpc port used for node communication for cluster , ip will be the same with broadcast
rpc_port = "4250"
## address that will be registered with lookupd (defaults to the OS hostname)
#broadcast_address = ""
broadcast_interface = "eth0"

## <addr>:<port> to listen on for TCP clients
tcp_address = "0.0.0.0:4150"

## <addr>:<port> to listen on for HTTP clients
http_address = "0.0.0.0:4151"

## <addr>:<port> to listen on for HTTPS clients
# https_address = "0.0.0.0:4152"

## keep alive heartbeat interval between the nsqd node with the nsqlookupd
lookup_ping_interval = "5s"

## path to store disk-backed messages
data_path = "/var/lib/nsq"

## default retention days to keep the consumed topic data
retention_days = 7
## number of messages to keep in memory (per topic/channel)
mem_queue_size = 10000

## number of bytes per diskqueue file before rolling
max_bytes_per_file = 104857600

## number of messages per diskqueue fsync
sync_every = 1

## duration of time per diskqueue fsync (time.Duration)
sync_timeout = "1s"

## duration to wait before auto-requeing a message
msg_timeout = "6s"

## maximum duration before a message will timeout
max_msg_timeout = "15m"

## maximum size of a single message in bytes
max_msg_size = 1024768

## maximum requeuing timeout for a message
max_req_timeout = "1h"

## maximum size of a single command body
max_body_size = 5123840

## maximum finished count with unordered
max_confirm_win = 1000

## maximum client configurable duration of time between client heartbeats
max_heartbeat_interval = "60s"

## maximum RDY count for a client
max_rdy_count = 2500

## maximum client configurable size (in bytes) for a client output buffer
max_output_buffer_size = 65536

## maximum client configurable duration of time between flushing to a client (time.Duration)
max_output_buffer_timeout = "1s"


## UDP <addr>:<port> of a statsd daemon for pushing stats
# statsd_address = "127.0.0.1:8125"

## prefix used for keys sent to statsd (%s for host replacement)
statsd_prefix = "nsq.%s"

## the protocol for statsd
statsd_protocol="tcp"

## duration between pushing to statsd (time.Duration)
statsd_interval = "60s"

## toggle sending memory and GC stats to statsd
statsd_mem_stats = true

## message processing time percentiles to keep track of (float)
e2e_processing_latency_percentiles = [
]

## calculate end to end latency quantiles for this duration of time (time.Duration)
e2e_processing_latency_window_time = "10m"


## path to certificate file
tls_cert = ""

## path to private key file
tls_key = ""

## set policy on client certificate (require - client must provide certificate,
##  require-verify - client must provide verifiable signed certificate)
# tls_client_auth_policy = "require-verify"

## set custom root Certificate Authority
# tls_root_ca_file = ""

## require client TLS upgrades
tls_required = false

## minimum TLS version ("ssl3.0", "tls1.0," "tls1.1", "tls1.2")
tls_min_version = ""

## enable deflate feature negotiation (client compression)
deflate = true

## max deflate compression level a client can negotiate (> values == > nsqd CPU usage)
max_deflate_level = 6

## enable snappy feature negotiation (client compression)
snappy = true

## bigger level means more log details
log_level = 3
## if empty, use the default flag value in glog
log_dir = "/var/log/"

## the time period (in hour) that the auto clean is allowed.
auto_clean_interval = ["2", "4"]
